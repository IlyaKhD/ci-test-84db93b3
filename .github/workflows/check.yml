name: Check

on:
  push:
  pull_request:
    types: 
      - opened
      - reopened
      - edited
      - synchronize
      - labeled
      - unlabeled

jobs:

  check-semver-label:

    name: Semver Label
    runs-on: ubuntu-latest
    steps:

      - name: Check labels
        env:
          INTERNAL:  ${{contains(github.event.pull_request.labels.*.name, 'internal') && 1 || 0}}
          PATCH:  ${{contains(github.event.pull_request.labels.*.name, 'patch') && 1 || 0}}
          MINOR:  ${{contains(github.event.pull_request.labels.*.name, 'minor') && 1 || 0}}
          MAJOR:  ${{contains(github.event.pull_request.labels.*.name, 'major') && 1 || 0}}
        run: |
          if [ $((INTERNAL + PATCH + MINOR + MAJOR)) -ne 1 ]
          then
            echo "PR must have one and only one tag of the following: internal, patch, minor, major. "
            exit 1
          fi

  check-version-bump:

    name: Version Bump
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check version
        run: |
          versionDiff=$( git diff HEAD^ HEAD -U0 package.json | tail -n +6);
          if ! [[ $versionDiff ]]; then exit 0; fi

          errCount=0
          newVersion=$( echo $versionDiff | grep -oP "\+.*\"version\":.+," | grep -oP "\d+\.\d+.\d+" )
          stat=$( git diff HEAD^ HEAD --shortstat )

          if ! [[ "$stat" =~ (1 *file *changed.*1 *insertion.*1 *deletion) ]]
          then
            echo "PR with version bump must have no other changes"
            ((errCount+=1))
          fi

          if [[ "${{ github.event.pull_request.title }}" != "$newVersion" ]]
          then
            echo "PR title must be '$newVersion'"
            ((errCount+=1))
          fi

          if [[ $errCount != 0 ]]; then exit 1; fi
